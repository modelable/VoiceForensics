
doctype html
html
  head
    title AI 가수 목소리 탐지
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")
    style.
      body {
        padding: 20px;
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
      }
      .upload-section {
        margin: 20px 0;
      }
      .avatar {
        width: 10em;
        height: 10em;
        margin: 1em;
      }
      .processing-bar {
        height: 20px;
        background-color: #000;
        width: 50%;
        margin: 20px 0;
      }
      .card {
        width: 500px;
        margin-top: 20px;
        padding: 20px;
        border-radius: 10px;
      }
      .file_input::-webkit-file-upload-button {
        width: 150px;
        height: 30px;
        background: rgb(0, 122, 255);
        border: none;
        border-radius: 40px;
        cursor: pointer;
        color: white;
      }
      .file_input::-webkit-file-upload-button:hover {
        background: rgb(255, 255, 255);
        border: 1px solid rgb(0, 122, 255);
        color: black;
      }
      .upload_title{
        margin: 0px 0px 40px 40px;
      }
  body
    .container
      .text-center
      .d-flex.justify-content-center
        .card
          .text-center
            img.avatar(src=`${imgPath}`, alt="Avatar")
            h2 Upload File
            
          form(action="/upload" method="post" enctype="multipart/form-data" id="uploadForm").upload-section
            h3.upload_title #{imgPath == "./asset/announce.png" ? "발음 표준 파일" : "원본"}
            .col.text-center            
              input(type="file" id="voice1" name="file1" accept="audio/*").file_input
              br
              hr
              br
            h3.upload_title #{imgPath == "./asset/announce.png" ? "발음 연습 파일" :"의심되는 파일"}
            .col.text-center
              input(type="file" id="voice2" name="file2" accept="audio/*").file_input
            .text-center
              br
              button.btn.btn-primary(id = "submit_button") 제출
              //div(class="text-center mt-4")
                  
              br
              div(id = "progress_div")
                h6(class="text-center text-primary text-sm") 업로드 바가 완성될 때까지 기다려 주세요
                span(class="spinner-grow spinner-grow-sm text-info") 
                div(class="progress mt-3")
                  div(class="progress-bar", role="progressbar", style="width: 0%", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100")
            br
            script(src="/socket.io/socket.io.js")
            script.
                document.addEventListener('DOMContentLoaded', function() {
                    var flag = "#{flag}"; //추가, 서버로부터 받은 flag
                    var userId = "#{userId}";  // Pug 템플릿에서 서버로부터 받은 userId
                    var socket = io();  // 소켓 연결 초기화
                    // 서버에 userId를 등록
                    socket.emit('register', userId);

                    socket.on('uploadProgress', function(data) {
                        var progress = document.querySelector('.progress-bar');
                        progress.style.width = data.progress + '%';
                        progress.setAttribute('aria-valuenow', data.progress);
                    });
                    
                    document.getElementById('progress_div').style.display = "none";

                    var form = document.getElementById('uploadForm');

                    form.onsubmit = function(e) {
                        e.preventDefault();
                        var file1 = document.getElementById("voice1").value;
                        var file2 = document.getElementById("voice2").value;

                        if (!file1 || !file2) {
                            alert("모든 파일을 선택해 주세요.");
                            return;
                        }
                        
                        document.getElementById('submit_button').style.display = "none";
                        document.getElementById('progress_div').style.display = "block";

                        var formData = new FormData(form);
                        formData.append('flag', flag); //0801 수정 -> flag 같이 전달
                        var xhr = new XMLHttpRequest();
                        xhr.open('POST', '/upload', true);
                        xhr.onload = function() {
                            if (xhr.status === 200) {
                              if(flag == 1)
                              {
                                window.location.href = '/train_process?flag=1';
                              }
                              else if(flag == 2)
                              {
                                window.location.href = '/train_process?flag=2';
                              }
                              else 
                              {
                                window.location.href = '/train_process?flag=3';
                              }
                            } else {
                                console.error('Upload failed.');
                            }
                        };
                        xhr.send(formData);
                    };
                });
      .row.mt-4
          .col-12.text-center
              form(action="/" method="GET")
                  button(type='submit' class="btn btn-outline-success btn-black") 홈으로 돌아가기
      br
      footer.text-center
        p © Created By Park Sohee | Lee Keejung | Lee Seungjay
        a(href="https://github.com")
          i(class="fab fa-github")
        a(href="https://linkedin.com")
          i(class="fab fa-linkedin")
    
    script(src="https://kit.fontawesome.com/a076d05399.js")
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js")
    script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js")